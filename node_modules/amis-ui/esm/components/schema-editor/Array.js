/**
 * amis-ui v2.9.0
 * Copyright 2018-2023 fex
 */

import { __extends, __assign, __decorate, __metadata } from 'tslib';
import React__default from 'react';
import { autobind } from 'amis-core';
import { Icon } from '../icons.js';
import { SchemaEditorItemCommon } from './Common.js';
import { SchemaEditorItem } from './Item.js';

var SchemaEditorItemArray = /** @class */ (function (_super) {
    __extends(SchemaEditorItemArray, _super);
    function SchemaEditorItemArray() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            collapsed: false
        };
        return _this;
    }
    SchemaEditorItemArray.prototype.toggleCollapsed = function () {
        this.setState({
            collapsed: !this.state.collapsed
        });
    };
    SchemaEditorItemArray.prototype.handleItemsChange = function (items) {
        var _a, _b;
        var value = __assign(__assign({}, this.props.value), { type: 'array', items: items });
        (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, value);
    };
    SchemaEditorItemArray.prototype.renderItems = function () {
        var _a = this.props, cx = _a.classnames, value = _a.value, renderExtraProps = _a.renderExtraProps, renderModalProps = _a.renderModalProps, locale = _a.locale, __ = _a.translate, classPrefix = _a.classPrefix, disabled = _a.disabled, showInfo = _a.showInfo, types = _a.types, onTypeChange = _a.onTypeChange, enableAdvancedSetting = _a.enableAdvancedSetting, placeholder = _a.placeholder;
        var items = (value === null || value === void 0 ? void 0 : value.items) || {
            type: 'string'
        };
        return (React__default.createElement("div", { className: cx('SchemaEditorProps SchemaEditorArrayProps', {
                'SchemaEditorProps--depth': showInfo !== false
            }) },
            React__default.createElement(SchemaEditorItem, { types: types, onTypeChange: onTypeChange, prefix: React__default.createElement("div", { className: cx('SchemaEditor-itemsLabel') }, __('JSONSchema.array_items')), value: items, onChange: this.handleItemsChange, renderExtraProps: renderExtraProps, renderModalProps: renderModalProps, locale: locale, translate: __, classnames: cx, classPrefix: classPrefix, disabled: disabled || !!(items === null || items === void 0 ? void 0 : items.$ref), enableAdvancedSetting: enableAdvancedSetting, placeholder: placeholder })));
    };
    SchemaEditorItemArray.prototype.render = function () {
        var _a = this.props, cx = _a.classnames, showInfo = _a.showInfo; _a.disabled;
        return (React__default.createElement("div", { className: cx('SchemaEditorItem SchemaEditorArray') },
            showInfo !== false ? (React__default.createElement(React__default.Fragment, null,
                React__default.createElement("a", { className: cx('SchemaEditor-caret', {
                        'is-collapsed': this.state.collapsed
                    }), onClick: this.toggleCollapsed },
                    React__default.createElement(Icon, { icon: "caret", className: "icon" })),
                this.renderCommon())) : null,
            this.state.collapsed ? null : this.renderItems()));
    };
    __decorate([
        autobind,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], SchemaEditorItemArray.prototype, "toggleCollapsed", null);
    __decorate([
        autobind,
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], SchemaEditorItemArray.prototype, "handleItemsChange", null);
    return SchemaEditorItemArray;
}(SchemaEditorItemCommon));

export { SchemaEditorItemArray };
