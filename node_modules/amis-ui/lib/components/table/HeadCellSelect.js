/**
 * amis-ui v2.9.0
 * Copyright 2018-2023 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var React = require('react');
var ReactDOM = require('react-dom');
var amisCore = require('amis-core');
var HeadCellDropDown = require('./HeadCellDropDown.js');
var icons = require('../icons.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

/**
 * @file table/HeadCellSelect
 * @author fex
 */
var HeadCellSelect = /** @class */ (function (_super) {
    tslib.__extends(HeadCellSelect, _super);
    function HeadCellSelect(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            key: ''
        };
        return _this;
    }
    HeadCellSelect.prototype.render = function () {
        var _this = this;
        var _a = this.props, selections = _a.selections, allKeys = _a.keys, popOverContainer = _a.popOverContainer, cx = _a.classnames, ns = _a.classPrefix;
        return (React__default["default"].createElement(HeadCellDropDown["default"], { className: "".concat(ns, "TableCell-selectionBtn"), layerClassName: "".concat(ns, "TableCell-selectionPopOver"), filterIcon: React__default["default"].createElement(icons.Icon, { icon: "left-arrow", className: "icon" }), active: false, popOverContainer: popOverContainer
                ? popOverContainer
                : function () { return ReactDOM.findDOMNode(_this); }, filterDropdown: function (_a) {
                var setSelectedKeys = _a.setSelectedKeys; _a.selectedKeys; var confirm = _a.confirm; _a.clearFilters;
                return (React__default["default"].createElement("ul", { className: cx('DropDown-menu') }, selections.map(function (item, index) { return (React__default["default"].createElement("li", { key: index, onClick: function () {
                        item.onSelect && item.onSelect(allKeys);
                        _this.handleClick(confirm, setSelectedKeys, item.key);
                    } }, item.text)); })));
            }, setSelectedKeys: function (keys) {
                return _this.setState({ key: keys });
            }, selectedKeys: this.state.key }));
    };
    HeadCellSelect.prototype.handleClick = function (confirm, setSelectedKeys, selectedKeys) {
        setSelectedKeys && setSelectedKeys(selectedKeys);
        confirm();
    };
    HeadCellSelect.defaultProps = {
        selections: []
    };
    return HeadCellSelect;
}(React__default["default"].Component));
var HeadCellSelect$1 = amisCore.themeable(amisCore.localeable(HeadCellSelect));

exports.HeadCellSelect = HeadCellSelect;
exports["default"] = HeadCellSelect$1;
