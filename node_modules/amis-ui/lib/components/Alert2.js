/**
 * amis-ui v2.9.0
 * Copyright 2018-2023 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var React = require('react');
var amisCore = require('amis-core');
var icons = require('./icons.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

/**
 * @file Alert2
 * @author fex
 */
var Alert = /** @class */ (function (_super) {
    tslib.__extends(Alert, _super);
    function Alert(props) {
        var _this = _super.call(this, props) || this;
        _this.handleClick = _this.handleClick.bind(_this);
        _this.state = {
            show: true
        };
        return _this;
    }
    Alert.prototype.handleClick = function () {
        this.setState({
            show: false
        }, this.props.onClose);
    };
    Alert.prototype.render = function () {
        var _a;
        var _b = this.props, cx = _b.classnames, className = _b.className, style = _b.style, level = _b.level, children = _b.children, showCloseButton = _b.showCloseButton, title = _b.title, icon = _b.icon, showIcon = _b.showIcon, iconClassName = _b.iconClassName, closeButtonClassName = _b.closeButtonClassName;
        // 优先使用内置svg，其次使用icon库
        var iconNode = icon ? (['string', 'object'].includes(typeof icon) ? (typeof icon === 'object' ? (amisCore.generateIcon(cx, icon, 'icon')) : (icons.getIcon(icon) && React__default["default"].createElement(icons.Icon, { icon: icon, className: cx("icon") }))) : React__default["default"].isValidElement(icon) ? (React__default["default"].cloneElement(icon, {
            className: cx("Alert-icon", (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className)
        })) : null) : showIcon ? (React__default["default"].createElement(icons.Icon, { icon: "alert-".concat(level), className: cx("icon") })) : null;
        return this.state.show ? (React__default["default"].createElement("div", { className: cx('Alert', level ? "Alert--".concat(level) : '', title ? 'Alert-has-title' : '', className), style: style },
            showIcon && iconNode ? (React__default["default"].createElement("div", { className: cx('Alert-icon', iconClassName) }, iconNode)) : null,
            React__default["default"].createElement("div", { className: cx('Alert-content') },
                title ? React__default["default"].createElement("div", { className: cx('Alert-title') }, title) : null,
                React__default["default"].createElement("div", { className: cx('Alert-desc') }, children)),
            showCloseButton ? (React__default["default"].createElement("button", { className: cx('Alert-close', closeButtonClassName), onClick: this.handleClick, type: "button" },
                React__default["default"].createElement(icons.Icon, { icon: "close", className: "icon" }))) : null)) : null;
    };
    Alert.defaultProps = {
        level: 'info',
        className: '',
        showCloseButton: false
    };
    Alert.propsList = [
        'level',
        'className',
        'showCloseButton',
        'onClose'
    ];
    return Alert;
}(React__default["default"].Component));
var Alert2 = amisCore.themeable(Alert);

exports.Alert = Alert;
exports["default"] = Alert2;
