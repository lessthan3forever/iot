/**
 * amis-ui v2.9.0
 * Copyright 2018-2023 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');

function _interopNamespace(e) {
	if (e && e.__esModule) return e;
	var n = Object.create(null);
	if (e) {
		Object.keys(e).forEach(function (k) {
			if (k !== 'default') {
				var d = Object.getOwnPropertyDescriptor(e, k);
				Object.defineProperty(n, k, d.get ? d : {
					enumerable: true,
					get: function () { return e[k]; }
				});
			}
		});
	}
	n["default"] = e;
	return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);

var _path;
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var SvgInputClear = function SvgInputClear(props) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends({
    className: "icon",
    viewBox: "0 0 1024 1024",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M512 39.385C250.092 39.385 39.385 250.092 39.385 512S250.092 984.615 512 984.615 984.615 773.908 984.615 512 773.908 39.385 512 39.385zm96.492 488.369 153.6 153.6c7.877 7.877 7.877 19.692 0 27.57l-55.138 55.138c-7.877 7.876-19.692 7.876-27.57 0l-153.6-153.6c-7.876-7.877-19.692-7.877-27.569 0l-153.6 153.6c-7.877 7.876-19.692 7.876-27.569 0l-55.138-55.139c-7.877-7.877-7.877-19.692 0-27.57l153.6-153.6c7.877-7.876 7.877-19.691 0-27.568l-155.57-155.57c-7.876-7.877-7.876-19.692 0-27.569l55.139-55.138c7.877-7.877 19.692-7.877 27.57 0l155.568 155.569c7.877 7.877 19.693 7.877 27.57 0l153.6-153.6c7.877-7.877 19.692-7.877 27.569 0l55.138 55.138c7.877 7.877 7.877 19.693 0 27.57l-153.6 153.6c-5.907 7.877-5.907 19.692 0 27.569z"
  })));
};

exports["default"] = SvgInputClear;
