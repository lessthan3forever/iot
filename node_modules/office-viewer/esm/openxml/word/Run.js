import { __values } from '../../node_modules/tslib/tslib.es6.js';
import { getVal } from '../../OpenXML.js';
import { parsePr } from '../../parse/parsePr.js';
import { Break } from './Break.js';
import { Drawing } from './drawing/Drawing.js';
import { InstrText } from './InstrText.js';
import { Pict } from './Pict.js';
import { Ruby } from './Ruby.js';
import { Sym } from './Sym.js';
import { Tab } from './Tab.js';

var Text = /** @class */ (function () {
    function Text(text) {
        this.preserveSpace = false;
        this.text = String(text);
    }
    return Text;
}());
var Run = /** @class */ (function () {
    function Run() {
        this.properties = {};
        this.children = [];
    }
    Run.prototype.addChild = function (child) {
        if (child) {
            this.children.push(child);
        }
    };
    Run.parseRunPr = function (word, element) {
        var cssStyle = parsePr(word, element);
        var rStyle;
        var rStyleElement = element.getElementsByTagName('w:rStyle').item(0);
        if (rStyleElement) {
            rStyle = getVal(rStyleElement);
        }
        return { cssStyle: cssStyle, rStyle: rStyle };
    };
    Run.fromXML = function (word, element) {
        var e_1, _a;
        var run = new Run();
        try {
            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                var tagName = child.tagName;
                switch (tagName) {
                    case 'w:t':
                        var textContent = child.textContent || '';
                        var text = new Text(textContent);
                        run.addChild(text);
                        break;
                    case 'w:rPr':
                        run.properties = Run.parseRunPr(word, child);
                        break;
                    case 'w:br':
                        run.addChild(Break.fromXML(word, child));
                        break;
                    case 'w:drawing':
                        run.addChild(Drawing.fromXML(word, child));
                        break;
                    case 'w:tab':
                        run.addChild(Tab.fromXML(word, child));
                        break;
                    case 'w:fldChar':
                        // 似乎只需要支持 instrText
                        break;
                    case 'w:instrText':
                        run.addChild(new InstrText(child.textContent || ''));
                        break;
                    case 'w:lastRenderedPageBreak':
                        // 目前也不支持分页显示
                        break;
                    case 'w:pict':
                        run.addChild(Pict.fromXML(word, child));
                        break;
                    case 'w:ruby':
                        run.addChild(Ruby.fromXML(word, child));
                        break;
                    case 'w:sym':
                        run.addChild(Sym.parseXML(child));
                        break;
                    default:
                        console.warn('parse Run: Unknown key', tagName, child);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return run;
    };
    return Run;
}());

export { Run, Text };
