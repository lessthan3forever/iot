import { __values } from '../../../node_modules/tslib/tslib.es6.js';
import { getVal } from '../../../OpenXML.js';
import { Lvl } from './Lvl.js';

var Num = /** @class */ (function () {
    function Num() {
        this.lvlOverride = { lvls: {} };
    }
    Num.fromXML = function (word, element) {
        var e_1, _a;
        var num = new Num();
        num.numId = element.getAttribute('w:numId') || '';
        var abstractNumId = element.querySelector('abstractNumId');
        if (abstractNumId) {
            num.abstractNumId = getVal(abstractNumId);
        }
        var lvlOverride = element.querySelector('lvlOverride');
        if (lvlOverride) {
            try {
                for (var _b = __values(lvlOverride.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var child = _c.value;
                    var tagName = child.tagName;
                    switch (tagName) {
                        case 'w:lvl':
                            var lvlId = child.getAttribute('w:lvlId') || '';
                            num.lvlOverride.lvls[lvlId] = Lvl.fromXML(word, child);
                            break;
                        default:
                            console.warn("Num: Unknown tag ", tagName, child);
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        return num;
    };
    return Num;
}());

export { Num };
