import { __values } from '../node_modules/tslib/tslib.es6.js';
import { createElement, appendChild } from '../util/dom.js';
import { Run } from '../openxml/word/Run.js';
import { BookmarkStart } from '../openxml/word/Bookmark.js';
import { Hyperlink } from '../openxml/word/Hyperlink.js';
import renderRun from './renderRun.js';
import { renderHyperLink } from './renderHyperLink.js';
import { renderBookmarkStart } from './renderBookmark.js';
import { renderNumbering } from './renderNumbering.js';
import { setElementStyle } from './setElementStyle.js';
import { renderTab } from './renderTab.js';
import { SmartTag } from '../openxml/word/SmartTag.js';
import renderInlineText from './renderInlineText.js';

/**
 * 渲染段落
 * @param renderEmptySpace 如果是 true 的话，当内容为空时会自动加上 &nbsp;
 */
function renderParagraph(word, paragraph, renderEmptySpace) {
    var e_1, _a, e_2, _b;
    if (renderEmptySpace === void 0) { renderEmptySpace = true; }
    word.currentParagraph = paragraph;
    var p = createElement('p');
    word.addClass(p, 'p');
    var properties = paragraph.properties;
    setElementStyle(word, p, properties);
    // 渲染列表前缀
    if (properties.numPr) {
        appendChild(p, renderNumbering(p, word, properties.numPr));
    }
    if (properties.tabs) {
        try {
            for (var _c = __values(properties.tabs), _d = _c.next(); !_d.done; _d = _c.next()) {
                var tab = _d.value;
                appendChild(p, renderTab(word, tab));
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    try {
        for (var _e = __values(paragraph.children), _f = _e.next(); !_f.done; _f = _e.next()) {
            var child = _f.value;
            if (child instanceof Run) {
                appendChild(p, renderRun(word, child, paragraph));
            }
            else if (child instanceof BookmarkStart) {
                appendChild(p, renderBookmarkStart(word, child));
            }
            else if (child instanceof Hyperlink) {
                var hyperlink = renderHyperLink(word, child, paragraph);
                appendChild(p, hyperlink);
            }
            else if (child instanceof SmartTag) {
                renderInlineText(word, child, p);
            }
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
        }
        finally { if (e_2) throw e_2.error; }
    }
    // 空行自动加个空格，不然会没高度
    if (p.innerHTML === '' && renderEmptySpace) {
        p.innerHTML = '&nbsp;';
    }
    return p;
}

export { renderParagraph as default };
