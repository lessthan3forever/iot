'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib_es6 = require('../node_modules/tslib/tslib.es6.js');
var dom = require('../util/dom.js');
var Run = require('../openxml/word/Run.js');
var Bookmark = require('../openxml/word/Bookmark.js');
var Hyperlink = require('../openxml/word/Hyperlink.js');
var renderRun = require('./renderRun.js');
var renderHyperLink = require('./renderHyperLink.js');
var renderBookmark = require('./renderBookmark.js');
var renderNumbering = require('./renderNumbering.js');
var setElementStyle = require('./setElementStyle.js');
var renderTab = require('./renderTab.js');
var SmartTag = require('../openxml/word/SmartTag.js');
var renderInlineText = require('./renderInlineText.js');

/**
 * 渲染段落
 * @param renderEmptySpace 如果是 true 的话，当内容为空时会自动加上 &nbsp;
 */
function renderParagraph(word, paragraph, renderEmptySpace) {
    var e_1, _a, e_2, _b;
    if (renderEmptySpace === void 0) { renderEmptySpace = true; }
    word.currentParagraph = paragraph;
    var p = dom.createElement('p');
    word.addClass(p, 'p');
    var properties = paragraph.properties;
    setElementStyle.setElementStyle(word, p, properties);
    // 渲染列表前缀
    if (properties.numPr) {
        dom.appendChild(p, renderNumbering.renderNumbering(p, word, properties.numPr));
    }
    if (properties.tabs) {
        try {
            for (var _c = tslib_es6.__values(properties.tabs), _d = _c.next(); !_d.done; _d = _c.next()) {
                var tab = _d.value;
                dom.appendChild(p, renderTab.renderTab(word, tab));
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    try {
        for (var _e = tslib_es6.__values(paragraph.children), _f = _e.next(); !_f.done; _f = _e.next()) {
            var child = _f.value;
            if (child instanceof Run.Run) {
                dom.appendChild(p, renderRun["default"](word, child, paragraph));
            }
            else if (child instanceof Bookmark.BookmarkStart) {
                dom.appendChild(p, renderBookmark.renderBookmarkStart(word, child));
            }
            else if (child instanceof Hyperlink.Hyperlink) {
                var hyperlink = renderHyperLink.renderHyperLink(word, child, paragraph);
                dom.appendChild(p, hyperlink);
            }
            else if (child instanceof SmartTag.SmartTag) {
                renderInlineText["default"](word, child, p);
            }
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
        }
        finally { if (e_2) throw e_2.error; }
    }
    // 空行自动加个空格，不然会没高度
    if (p.innerHTML === '' && renderEmptySpace) {
        p.innerHTML = '&nbsp;';
    }
    return p;
}

exports["default"] = renderParagraph;
