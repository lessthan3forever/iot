'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var OpenXML = require('../OpenXML.js');
var Types = require('../openxml/Types.js');

/**
 * 解析颜色，转成 css 的颜色
 */
var knownColors = [
    'black',
    'blue',
    'cyan',
    'darkBlue',
    'darkCyan',
    'darkGray',
    'darkGreen',
    'darkMagenta',
    'darkRed',
    'darkYellow',
    'green',
    'lightGray',
    'magenta',
    'none',
    'red',
    'white',
    'yellow'
];
/**
 *
 * 解析属性上的 color，比如  <w:top w:val="single" w:sz="24" w:space="1" w:color="FF0000" />
 * @param attrName color 默认属性
 * @param autoColor 默认值
 * @returns css 颜色
 */
function parseColorAttr(word, element, attrName, autoColor) {
    if (attrName === void 0) { attrName = 'w:color'; }
    if (autoColor === void 0) { autoColor = 'black'; }
    var color = element.getAttribute(attrName);
    if (color) {
        if (color == 'auto') {
            return autoColor;
        }
        else if (typeof color === 'string' && knownColors.includes(color)) {
            return color;
        }
        return "#".concat(color);
    }
    var themeColor = element.getAttribute('w:themeColor');
    return themeColor ? word.getThemeColor(themeColor) : '';
}
/**
 * 专门用来支持 shd 的颜色
 * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/ST_Shd.html
 */
function parseShdColor(word, element) {
    var color = element.getAttribute('w:fill') || '';
    var val = OpenXML.getVal(element);
    if (color === 'auto') {
        color = 'inherit';
    }
    if (color.length === 6) {
        switch (val) {
            case Types.ST_Shd.clear:
                return "#".concat(color);
            case Types.ST_Shd.pct10:
                return colorPercent(color, 0.1);
            case Types.ST_Shd.pct12:
                return colorPercent(color, 0.125);
            case Types.ST_Shd.pct15:
                return colorPercent(color, 0.15);
            case Types.ST_Shd.pct20:
                return colorPercent(color, 0.2);
            case Types.ST_Shd.pct25:
                return colorPercent(color, 0.25);
            case Types.ST_Shd.pct30:
                return colorPercent(color, 0.3);
            case Types.ST_Shd.pct35:
                return colorPercent(color, 0.35);
            case Types.ST_Shd.pct37:
                return colorPercent(color, 0.375);
            case Types.ST_Shd.pct40:
                return colorPercent(color, 0.4);
            case Types.ST_Shd.pct45:
                return colorPercent(color, 0.45);
            case Types.ST_Shd.pct5:
                return colorPercent(color, 0.05);
            case Types.ST_Shd.pct50:
                return colorPercent(color, 0.5);
            case Types.ST_Shd.pct55:
                return colorPercent(color, 0.55);
            case Types.ST_Shd.pct60:
                return colorPercent(color, 0.6);
            case Types.ST_Shd.pct65:
                return colorPercent(color, 0.65);
            case Types.ST_Shd.pct70:
                return colorPercent(color, 0.7);
            case Types.ST_Shd.pct75:
                return colorPercent(color, 0.75);
            case Types.ST_Shd.pct80:
                return colorPercent(color, 0.8);
            case Types.ST_Shd.pct85:
                return colorPercent(color, 0.85);
            case Types.ST_Shd.pct87:
                return colorPercent(color, 0.87);
            case Types.ST_Shd.pct90:
                return colorPercent(color, 0.9);
            case Types.ST_Shd.pct95:
                return colorPercent(color, 0.95);
            default:
                console.warn('unsupport shd val', val);
                return "#".concat(color);
        }
    }
    return '';
}
/**
 * 用 alpha 来模拟 ptc 功能
 */
function colorPercent(color, percent) {
    var r = parseInt(color.substring(0, 2), 16);
    var g = parseInt(color.substring(2, 4), 16);
    var b = parseInt(color.substring(4, 6), 16);
    return "rgba(".concat(r, ", ").concat(g, ", ").concat(b, ", ").concat(percent, ")");
}
/**
 * 解析 color 标签，比如 <w:color w:themeColor="accent3" />
 * @returns css 颜色
 */
function parseColor(word, element) {
    return parseColorAttr(word, element, 'w:val');
}

exports.parseColor = parseColor;
exports.parseColorAttr = parseColorAttr;
exports.parseShdColor = parseShdColor;
