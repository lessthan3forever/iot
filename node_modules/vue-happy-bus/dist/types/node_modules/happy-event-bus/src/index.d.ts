export declare type EventNameType = string | number | symbol;
export declare type EventCallback = (...args: Array<any>) => any;
export declare type ListenStopHandle = () => void;
export default class Emitter {
    private eventMap;
    constructor();
    on: (name: EventNameType, callback: EventCallback) => ListenStopHandle;
    once: (name: EventNameType, callback: EventCallback) => ListenStopHandle;
    emit: (name: EventNameType, ...args: Array<any>) => void;
    off: (name?: string | number | symbol | undefined, callback?: EventCallback | undefined) => void;
}
